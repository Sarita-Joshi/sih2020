{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sarita\\\\react-firebase-authentication-starter-kit\\\\src\\\\components\\\\Home\\\\index.js\";\nimport React from 'react';\nimport { withAuthorization } from '../Session';\nimport PropTypes from \"prop-types\";\nimport SpeechRecognition from 'react-speech-recognition';\nvar propTypes = {\n  // Props injected by SpeechRecognition\n  transcript: PropTypes.string,\n  resetTranscript: PropTypes.func,\n  browserSupportsSpeechRecognition: PropTypes.bool\n};\n\nvar record = function record() {\n  console.log(transcript);\n};\n\nvar Dictaphone = function Dictaphone(_ref) {\n  var transcript = _ref.transcript,\n      resetTranscript = _ref.resetTranscript,\n      browserSupportsSpeechRecognition = _ref.browserSupportsSpeechRecognition;\n\n  if (!browserSupportsSpeechRecognition) {\n    return null;\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: resetTranscript,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"Reset\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, transcript));\n};\n\nDictaphone.propTypes = propTypes;\n\nvar condition = function condition(authUser) {\n  return !!authUser;\n};\n\nexport default withAuthorization(condition)(SpeechRecognition(Dictaphone));","map":{"version":3,"sources":["C:/Users/Sarita/react-firebase-authentication-starter-kit/src/components/Home/index.js"],"names":["React","withAuthorization","PropTypes","SpeechRecognition","propTypes","transcript","string","resetTranscript","func","browserSupportsSpeechRecognition","bool","record","console","log","Dictaphone","condition","authUser"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,iBAAT,QAAkC,YAAlC;AAEA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,iBAAP,MAA8B,0BAA9B;AAEA,IAAMC,SAAS,GAAG;AAChB;AACAC,EAAAA,UAAU,EAAEH,SAAS,CAACI,MAFN;AAGhBC,EAAAA,eAAe,EAAEL,SAAS,CAACM,IAHX;AAIhBC,EAAAA,gCAAgC,EAAEP,SAAS,CAACQ;AAJ5B,CAAlB;;AAOA,IAAIC,MAAM,GAAG,SAATA,MAAS,GAAU;AACrBC,EAAAA,OAAO,CAACC,GAAR,CAAYR,UAAZ;AAED,CAHD;;AAKA,IAAMS,UAAU,GAAG,SAAbA,UAAa,OAIb;AAAA,MAHJT,UAGI,QAHJA,UAGI;AAAA,MAFJE,eAEI,QAFJA,eAEI;AAAA,MADJE,gCACI,QADJA,gCACI;;AACJ,MAAI,CAACA,gCAAL,EAAuC;AACrC,WAAO,IAAP;AACD;;AAED,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,OAAO,EAAEF,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOF,UAAP,CAFF,CADF;AAMD,CAfD;;AAiBAS,UAAU,CAACV,SAAX,GAAuBA,SAAvB;;AAEA,IAAMW,SAAS,GAAG,SAAZA,SAAY,CAAAC,QAAQ;AAAA,SAAI,CAAC,CAACA,QAAN;AAAA,CAA1B;;AACA,eAAef,iBAAiB,CAACc,SAAD,CAAjB,CAA6BZ,iBAAiB,CAACW,UAAD,CAA9C,CAAf","sourcesContent":["import React from 'react';\r\nimport { withAuthorization } from '../Session';\r\n\r\nimport PropTypes from \"prop-types\";\r\nimport SpeechRecognition from 'react-speech-recognition';\r\n\r\nconst propTypes = {\r\n  // Props injected by SpeechRecognition\r\n  transcript: PropTypes.string,\r\n  resetTranscript: PropTypes.func,\r\n  browserSupportsSpeechRecognition: PropTypes.bool\r\n};\r\n\r\nvar record = function(){\r\n  console.log(transcript);\r\n\r\n};\r\n\r\nconst Dictaphone = ({\r\n  transcript,\r\n  resetTranscript,\r\n  browserSupportsSpeechRecognition\r\n}) => {\r\n  if (!browserSupportsSpeechRecognition) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <button onClick={resetTranscript}>Reset</button>\r\n      <span>{transcript}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nDictaphone.propTypes = propTypes;\r\n\r\nconst condition = authUser => !!authUser;\r\nexport default withAuthorization(condition)(SpeechRecognition(Dictaphone));"]},"metadata":{},"sourceType":"module"}