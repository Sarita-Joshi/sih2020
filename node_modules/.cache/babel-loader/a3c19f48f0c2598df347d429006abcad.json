{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Sarita\\\\react-firebase-authentication-starter-kit\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Sarita\\\\react-firebase-authentication-starter-kit\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Sarita\\\\react-firebase-authentication-starter-kit\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Sarita\\\\react-firebase-authentication-starter-kit\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\Sarita\\\\react-firebase-authentication-starter-kit\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\Users\\\\Sarita\\\\react-firebase-authentication-starter-kit\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Sarita\\\\react-firebase-authentication-starter-kit\\\\src\\\\components\\\\Speech\\\\index.js\";\nimport React, { Component } from 'react';\nvar SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\nvar recognition = new SpeechRecognition();\nrecognition.continous = true;\nrecognition.interimResults = true;\nrecognition.lang = 'en-US';\n\nvar Speech =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Speech, _Component);\n\n  function Speech() {\n    var _this;\n\n    _classCallCheck(this, Speech);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Speech).call(this));\n    _this.state = {\n      listening: false\n    };\n    _this.toggleListen = _this.toggleListen.bind(_assertThisInitialized(_this));\n    _this.handleListen = _this.handleListen.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Speech, [{\n    key: \"callAPI\",\n    value: function callAPI() {\n      var _this2 = this;\n\n      fetch('http://localhost:9000/name').then(function (res) {\n        return res.text();\n      }).then(function (res) {\n        return _this2.setState({\n          apiResponse: res\n        });\n      });\n    }\n  }, {\n    key: \"toggleListen\",\n    value: function toggleListen() {\n      this.state.listening = !this.state.listening;\n      this.handleListen();\n    }\n  }, {\n    key: \"handleListen\",\n    value: function handleListen() {\n      if (this.state.listening) {\n        document.getElementById('microphone-btn').value = \"stop\";\n        recognition.start();\n      } else {\n        document.getElementById('microphone-btn').value = \"record\";\n        recognition.stop();\n      }\n\n      var finalTranscript = '';\n\n      recognition.onresult = function (event) {\n        var interimTranscript = '';\n\n        for (var i = event.resultIndex; i < event.results.length; i++) {\n          var transcript = event.results[i][0].transcript;\n          if (event.results[i].isFinal) finalTranscript += transcript + ' ';else interimTranscript += transcript;\n        }\n\n        if (interimTranscript.length <= 1) {\n          document.getElementById('interim').innerHTML = \"!\";\n        } else {\n          document.getElementById('interim').innerHTML = interimTranscript;\n        }\n\n        document.getElementById('final').innerHTML = finalTranscript;\n      };\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        id: \"microphone-btn\",\n        onClick: this.toggleListen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, \"Record\"), React.createElement(\"button\", {\n        id: \"recognize-btn\",\n        onClick: this.callAPI,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \"Recognize\"), React.createElement(\"div\", {\n        id: \"interim\",\n        color: \"gray\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        id: \"final\",\n        color: \"black\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Speech;\n}(Component);\n\nexport default Speech;","map":{"version":3,"sources":["C:/Users/Sarita/react-firebase-authentication-starter-kit/src/components/Speech/index.js"],"names":["React","Component","SpeechRecognition","window","webkitSpeechRecognition","recognition","continous","interimResults","lang","Speech","state","listening","toggleListen","bind","handleListen","fetch","then","res","text","setState","apiResponse","document","getElementById","value","start","stop","finalTranscript","onresult","event","interimTranscript","i","resultIndex","results","length","transcript","isFinal","innerHTML","callAPI"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n\r\nconst SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition\r\nconst recognition = new SpeechRecognition()\r\n\r\nrecognition.continous = true\r\nrecognition.interimResults = true\r\nrecognition.lang = 'en-US'\r\n\r\n\r\nclass Speech extends Component {\r\n\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      listening: false\r\n    }\r\n    this.toggleListen = this.toggleListen.bind(this)\r\n    this.handleListen = this.handleListen.bind(this)\r\n  }\r\n  \r\n  callAPI(){\r\n    fetch('http://localhost:9000/name')\r\n    .then(res => res.text())\r\n    .then(res => this.setState({apiResponse : res}));\r\n  }\r\n\r\n  toggleListen() {\r\n    this.state.listening = !this.state.listening;\r\n     this.handleListen();\r\n  }\r\n  \r\n  handleListen(){\r\n    if (this.state.listening) {\r\n      document.getElementById('microphone-btn').value = \"stop\";\r\n      recognition.start()\r\n    } else {\r\n      document.getElementById('microphone-btn').value = \"record\";\r\n      recognition.stop()      \r\n    }\r\n\r\n    let finalTranscript = ''\r\n    recognition.onresult = event => {\r\n      let interimTranscript = ''\r\n\r\n      for (let i = event.resultIndex; i < event.results.length; i++) {\r\n        const transcript = event.results[i][0].transcript;\r\n        if (event.results[i].isFinal) finalTranscript += transcript + ' ';\r\n        else interimTranscript += transcript;\r\n      }\r\n      if(interimTranscript.length<=1){\r\n        document.getElementById('interim').innerHTML = \"!\"  \r\n      }else{\r\n        document.getElementById('interim').innerHTML = interimTranscript\r\n      }\r\n      document.getElementById('final').innerHTML = finalTranscript\r\n\r\n\r\n\r\n  }\r\n}\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <button id=\"microphone-btn\" onClick={this.toggleListen}>Record</button>\r\n        <button id=\"recognize-btn\" onClick={this.callAPI}>Recognize</button>\r\n        <div id=\"interim\" color='gray'></div>\r\n        <div id=\"final\" color='black'></div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Speech"]},"metadata":{},"sourceType":"module"}