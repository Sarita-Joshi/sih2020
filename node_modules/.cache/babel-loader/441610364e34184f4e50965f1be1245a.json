{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\Sarita\\\\react-firebase-authentication-starter-kit\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\Sarita\\\\react-firebase-authentication-starter-kit\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"C:\\\\Users\\\\Sarita\\\\react-firebase-authentication-starter-kit\\\\src\\\\components\\\\Speech\\\\index.js\";\nimport React, { Component } from 'react';\nimport * as ROUTES from '../../constants/routes';\nimport './index.css';\nconst SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\nconst recognition = new SpeechRecognition();\nrecognition.continous = true;\nrecognition.interimResults = true;\nrecognition.lang = 'en-US';\n\nclass Speech extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      listening: false\n    };\n    this.i = 0;\n    this.text = '';\n    this.sugg_text = '';\n    this.sym_text = '';\n    this.adv_text = '';\n    this.dia_text = '';\n    this.toggleListen = this.toggleListen.bind(this);\n    this.handleListen = this.handleListen.bind(this);\n    this.callAPI = this.callAPI.bind(this);\n  }\n\n  callAPI() {\n    var _this = this;\n\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var user, response, res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            user = {\n              data: document.getElementByID('finaltext').value\n            };\n            _context.next = 3;\n            return fetch('http://localhost:9000/name', {\n              method: 'POST',\n              mode: 'no-cors',\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              qs: {\n                data: document.getElementById('finaltext').value\n              },\n              body: JSON.stringify(user)\n            });\n\n          case 3:\n            response = _context.sent;\n            _context.next = 6;\n            return response.json();\n\n          case 6:\n            res = _context.sent;\n            alert(res.message); // .then(res => res.json())\n            // .then(res => {\n            //   this.setState({apiResponse : res})\n\n            for (_this.i = 0; _this.i < res.Dose.length; _this.i++) {\n              _this.text += res.Medicines[_this.i] + \" for \" + res.Days[_this.i] + \" Days, \" + res.Dose[_this.i] + \"\\n\";\n            }\n\n            for (_this.i = 0; _this.i < res.Symptom.length; _this.i++) {\n              _this.sym_text += res.Symptom[_this.i] + \"\\n\";\n            }\n\n            for (_this.i = 0; _this.i < res.Advice.length; _this.i++) {\n              _this.adv_text += res.Advice[_this.i] + \"\\n\";\n            }\n\n            for (_this.i = 0; _this.i < res.Recommendations.length; _this.i++) {\n              _this.sugg_text += res.Recommendations[_this.i] + \"\\n\";\n            }\n\n            for (_this.i = 0; _this.i < res.Diagnosis.length; _this.i++) {\n              _this.dia_text += res.Diagnosis[_this.i] + \"\\n\";\n            }\n\n            _this.props.history.push({\n              pathname: ROUTES.PRESCRIPTION,\n              state: {\n                PatientName: res.PatientName,\n                Age: res.Age,\n                Symptoms: _this.sym_text,\n                Diagnosis: _this.dia_text,\n                Medicines: _this.text,\n                Advice: _this.adv_text,\n                Recommendations: _this.sugg_text\n              }\n            });\n\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }))();\n  }\n\n  toggleListen() {\n    this.state.listening = !this.state.listening;\n    this.handleListen();\n  }\n\n  handleListen() {\n    if (this.state.listening) {\n      document.getElementById('microphone-btn').innerHTML = \"stop\";\n      recognition.start();\n    } else {\n      document.getElementById('microphone-btn').innerHTML = \"record\";\n      recognition.stop();\n    }\n\n    let finalTranscript = '';\n\n    recognition.onresult = event => {\n      let interimTranscript = '';\n\n      for (let i = event.resultIndex; i < event.results.length; i++) {\n        const transcript = event.results[i][0].transcript;\n        if (event.results[i].isFinal) finalTranscript += transcript + ' ';else interimTranscript += transcript;\n      }\n\n      if (interimTranscript.length <= 1) {\n        document.getElementById('interim').innerHTML = \"!\";\n      } else {\n        document.getElementById('interim').innerHTML = interimTranscript;\n      }\n\n      document.getElementById('finaltext').value = finalTranscript;\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      id: \"microphone-btn\",\n      className: \"btn btn-primary btn-block btn-lg\",\n      onClick: this.toggleListen,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }\n    }, \"Record\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 125\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      id: \"recognize-btn\",\n      className: \"btn btn-primary btn-block btn-lg\",\n      onClick: this.callAPI,\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }\n    }, \"Recognize\"), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"interim\",\n      color: \"gray\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"textarea\", {\n      id: \"finaltext\",\n      className: \"form-control\",\n      placeholder: \"transcript\",\n      color: \"black\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default Speech;","map":{"version":3,"sources":["C:/Users/Sarita/react-firebase-authentication-starter-kit/src/components/Speech/index.js"],"names":["React","Component","ROUTES","SpeechRecognition","window","webkitSpeechRecognition","recognition","continous","interimResults","lang","Speech","constructor","props","state","listening","i","text","sugg_text","sym_text","adv_text","dia_text","toggleListen","bind","handleListen","callAPI","user","data","document","getElementByID","value","fetch","method","mode","headers","qs","getElementById","body","JSON","stringify","response","json","res","alert","message","Dose","length","Medicines","Days","Symptom","Advice","Recommendations","Diagnosis","history","push","pathname","PRESCRIPTION","PatientName","Age","Symptoms","innerHTML","start","stop","finalTranscript","onresult","event","interimTranscript","resultIndex","results","transcript","isFinal","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport * as ROUTES from '../../constants/routes';\r\nimport './index.css';\r\nconst SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition \r\nconst recognition = new SpeechRecognition()\r\n\r\nrecognition.continous = true\r\nrecognition.interimResults = true\r\nrecognition.lang = 'en-US'\r\n\r\n\r\nclass Speech extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      listening: false\r\n    }\r\n    this.i=0;\r\n    this.text='';\r\n    this.sugg_text='';\r\n    this.sym_text='';\r\n    this.adv_text='';\r\n    this.dia_text='';\r\n    this.toggleListen = this.toggleListen.bind(this)\r\n    this.handleListen = this.handleListen.bind(this)\r\n    this.callAPI = this.callAPI.bind(this)\r\n  }\r\n  \r\n  async callAPI(){\r\n\r\n    let user = {\r\n      data : document.getElementByID('finaltext').value,\r\n    };\r\n\r\n    let response = await fetch('http://localhost:9000/name',{   \r\n      method: 'POST',    \r\n      mode:'no-cors',\r\n      headers: {'Content-Type':'application/json'},\r\n      qs: { data: document.getElementById('finaltext').value } ,\r\n      body: JSON.stringify(user),\r\n    })\r\n\r\n    let res = await response.json();\r\n    alert(res.message);\r\n    // .then(res => res.json())\r\n    // .then(res => {\r\n    //   this.setState({apiResponse : res})\r\n\r\n  \r\n      for (this.i = 0; this.i < res.Dose.length; this.i++) {\r\n        this.text += res.Medicines[this.i]+\" for \"+res.Days[this.i]+\" Days, \"+res.Dose[this.i]+\"\\n\";\r\n      }\r\n\r\n      for (this.i = 0; this.i < res.Symptom.length; this.i++) {\r\n        this.sym_text += res.Symptom[this.i]+\"\\n\";\r\n      }\r\n\r\n      for (this.i = 0; this.i < res.Advice.length; this.i++) {\r\n        this.adv_text += res.Advice[this.i]+\"\\n\";\r\n      }\r\n\r\n      for (this.i = 0; this.i < res.Recommendations.length; this.i++) {\r\n        this.sugg_text += res.Recommendations[this.i]+\"\\n\";\r\n      }\r\n\r\n      for (this.i = 0; this.i < res.Diagnosis.length; this.i++) {\r\n        this.dia_text += res.Diagnosis[this.i]+\"\\n\";\r\n      }\r\n     \r\n\r\n      this.props.history.push({\r\n        pathname: ROUTES.PRESCRIPTION,\r\n        state : {\r\n        PatientName: res.PatientName,\r\n        Age: res.Age,\r\n        Symptoms: this.sym_text,\r\n        Diagnosis: this.dia_text,\r\n        Medicines: this.text,\r\n        Advice: this.adv_text,\r\n        Recommendations: this.sugg_text,\r\n        }\r\n      }) \r\n   \r\n  }\r\n\r\n  toggleListen() {\r\n    this.state.listening = !this.state.listening;\r\n     this.handleListen();\r\n  }\r\n  \r\n  handleListen(){ \r\n    if (this.state.listening) {\r\n      document.getElementById('microphone-btn').innerHTML = \"stop\";\r\n      recognition.start()\r\n    } else {\r\n      document.getElementById('microphone-btn').innerHTML = \"record\";\r\n      recognition.stop()      \r\n    }\r\n\r\n    let finalTranscript = ''\r\n    recognition.onresult = event => {\r\n      let interimTranscript = ''\r\n\r\n      for (let i = event.resultIndex; i < event.results.length; i++) {\r\n        const transcript = event.results[i][0].transcript;\r\n        if (event.results[i].isFinal) finalTranscript += transcript + ' ';\r\n        else interimTranscript += transcript;\r\n      }\r\n      if(interimTranscript.length<=1){\r\n        document.getElementById('interim').innerHTML = \"!\"  \r\n      }else{\r\n        document.getElementById('interim').innerHTML = interimTranscript\r\n      }\r\n\r\n      document.getElementById('finaltext').value = finalTranscript\r\n\r\n\r\n  }\r\n}\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"wrap\">\r\n        <button id=\"microphone-btn\" className=\"btn btn-primary btn-block btn-lg\" onClick={this.toggleListen}>Record</button><br/>\r\n        <button id=\"recognize-btn\" className=\"btn btn-primary btn-block btn-lg\" onClick={this.callAPI} type=\"submit\">Recognize</button>\r\n        <div id=\"interim\" color='gray'></div>\r\n        <textarea id=\"finaltext\" className=\"form-control\" placeholder=\"transcript\" color='black'/>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Speech;"]},"metadata":{},"sourceType":"module"}