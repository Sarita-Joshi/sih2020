{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Sarita\\\\react-firebase-authentication-starter-kit\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Sarita\\\\react-firebase-authentication-starter-kit\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Sarita\\\\react-firebase-authentication-starter-kit\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Sarita\\\\react-firebase-authentication-starter-kit\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Sarita\\\\react-firebase-authentication-starter-kit\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Sarita\\\\react-firebase-authentication-starter-kit\\\\src\\\\components\\\\Session\\\\withAuthorization.js\";\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\nimport AuthUserContext from './context';\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\n\nvar withAuthorization = function withAuthorization(condition) {\n  return function (Component) {\n    var WithAuthorization =\n    /*#__PURE__*/\n    function (_React$Component) {\n      _inherits(WithAuthorization, _React$Component);\n\n      function WithAuthorization() {\n        _classCallCheck(this, WithAuthorization);\n\n        return _possibleConstructorReturn(this, _getPrototypeOf(WithAuthorization).apply(this, arguments));\n      }\n\n      _createClass(WithAuthorization, [{\n        key: \"componentDidMount\",\n        value: function componentDidMount() {\n          var _this = this;\n\n          this.listener = this.props.firebase.auth.onAuthStateChanged(function (authUser) {\n            if (!condition(authUser)) {\n              _this.props.history.push(ROUTES.SIGN_IN);\n            }\n          });\n        }\n      }, {\n        key: \"callAPI\",\n        value: function callAPI() {\n          var _this2 = this;\n\n          fetch('http://localhost:9000/testAPI').then(function (res) {\n            return res.text();\n          }).then(function (res) {\n            return _this2.setState({\n              apiResponse: res\n            });\n          });\n        }\n      }, {\n        key: \"componentWillMount\",\n        value: function componentWillMount() {\n          this.callAPI();\n        }\n      }, {\n        key: \"componentWillUnmount\",\n        value: function componentWillUnmount() {\n          this.listener();\n        }\n      }, {\n        key: \"render\",\n        value: function render() {\n          var _this3 = this;\n\n          return React.createElement(AuthUserContext.Consumer, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 38\n            },\n            __self: this\n          }, React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 39\n            },\n            __self: this\n          }, this.state.apiResponse), function (authUser) {\n            return condition(authUser) ? React.createElement(Component, Object.assign({}, _this3.props, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 41\n              },\n              __self: this\n            })) : null;\n          });\n        }\n      }]);\n\n      return WithAuthorization;\n    }(React.Component);\n\n    return compose(withRouter, withFirebase)(WithAuthorization);\n  };\n};\n\nexport default withAuthorization;","map":{"version":3,"sources":["C:/Users/Sarita/react-firebase-authentication-starter-kit/src/components/Session/withAuthorization.js"],"names":["React","withRouter","compose","AuthUserContext","withFirebase","ROUTES","withAuthorization","condition","Component","WithAuthorization","listener","props","firebase","auth","onAuthStateChanged","authUser","history","push","SIGN_IN","fetch","then","res","text","setState","apiResponse","callAPI","state"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,OAAT,QAAwB,WAAxB;AAEA,OAAOC,eAAP,MAA4B,WAA5B;AACA,SAASC,YAAT,QAA6B,aAA7B;AACA,OAAO,KAAKC,MAAZ,MAAwB,wBAAxB;;AACA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAAAC,SAAS;AAAA,SAAI,UAAAC,SAAS,EAAI;AAAA,QAE5CC,iBAF4C;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,4CAG5B;AAAA;;AAClB,eAAKC,QAAL,GAAgB,KAAKC,KAAL,CAAWC,QAAX,CAAoBC,IAApB,CAAyBC,kBAAzB,CACd,UAAAC,QAAQ,EAAI;AACV,gBAAI,CAACR,SAAS,CAACQ,QAAD,CAAd,EAA0B;AACxB,cAAA,KAAI,CAACJ,KAAL,CAAWK,OAAX,CAAmBC,IAAnB,CAAwBZ,MAAM,CAACa,OAA/B;AACD;AACF,WALa,CAAhB;AAOD;AAX+C;AAAA;AAAA,kCAavC;AAAA;;AACPC,UAAAA,KAAK,CAAC,+BAAD,CAAL,CACCC,IADD,CACM,UAAAC,GAAG;AAAA,mBAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,WADT,EAECF,IAFD,CAEM,UAAAC,GAAG;AAAA,mBAAI,MAAI,CAACE,QAAL,CAAc;AAACC,cAAAA,WAAW,EAAGH;AAAf,aAAd,CAAJ;AAAA,WAFT;AAGD;AAjB+C;AAAA;AAAA,6CAmB3B;AACnB,eAAKI,OAAL;AACD;AArB+C;AAAA;AAAA,+CAuBzB;AACrB,eAAKf,QAAL;AACD;AAzB+C;AAAA;AAAA,iCA4BvC;AAAA;;AACP,iBACE,oBAAC,eAAD,CAAiB,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAI,KAAKgB,KAAL,CAAWF,WAAf,CADF,EAEG,UAAAT,QAAQ;AAAA,mBACPR,SAAS,CAACQ,QAAD,CAAT,GAAsB,oBAAC,SAAD,oBAAe,MAAI,CAACJ,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAtB,GAAsD,IAD/C;AAAA,WAFX,CADF;AAQD;AArC+C;;AAAA;AAAA,MAElBX,KAAK,CAACQ,SAFY;;AAuClD,WAAON,OAAO,CACZD,UADY,EAEZG,YAFY,CAAP,CAGLK,iBAHK,CAAP;AAID,GA3CkC;AAAA,CAAnC;;AA4CA,eAAeH,iBAAf","sourcesContent":["import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { compose } from 'recompose';\r\n\r\nimport AuthUserContext from './context';\r\nimport { withFirebase } from '../Firebase';\r\nimport * as ROUTES from '../../constants/routes';\r\nconst withAuthorization = condition => Component => {\r\n\r\n  class WithAuthorization extends React.Component {\r\n    componentDidMount() {\r\n      this.listener = this.props.firebase.auth.onAuthStateChanged(\r\n        authUser => {\r\n          if (!condition(authUser)) {\r\n            this.props.history.push(ROUTES.SIGN_IN);\r\n          }\r\n        },\r\n      );\r\n    }\r\n\r\n    callAPI(){\r\n      fetch('http://localhost:9000/testAPI')\r\n      .then(res => res.text())\r\n      .then(res => this.setState({apiResponse : res}));\r\n    }\r\n\r\n    componentWillMount() {\r\n      this.callAPI();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n      this.listener();\r\n    }\r\n\r\n    \r\n    render() {\r\n      return (\r\n        <AuthUserContext.Consumer>\r\n          <p>{this.state.apiResponse}</p>\r\n          {authUser =>\r\n            condition(authUser) ? <Component {...this.props} /> : null\r\n          }\r\n        </AuthUserContext.Consumer>\r\n      );\r\n    }\r\n  }\r\n  return compose(\r\n    withRouter,\r\n    withFirebase,\r\n  )(WithAuthorization);\r\n};\r\nexport default withAuthorization;"]},"metadata":{},"sourceType":"module"}