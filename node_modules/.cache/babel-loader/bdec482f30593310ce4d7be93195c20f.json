{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sarita\\\\react-firebase-authentication-starter-kit\\\\src\\\\components\\\\Speech\\\\index.js\";\nimport React, { Component } from 'react';\nimport './index.css';\nconst SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\nconst recognition = new SpeechRecognition();\nrecognition.continous = true;\nrecognition.interimResults = true;\nrecognition.lang = 'en-US';\n\nclass Speech extends Component {\n  constructor() {\n    super();\n    this.state = {\n      listening: false\n    };\n    this.toggleListen = this.toggleListen.bind(this);\n    this.handleListen = this.handleListen.bind(this);\n  }\n\n  callAPI() {\n    fetch('http://localhost:9000/name?data=' + document.getElementById('final').innerHTML).then(res => res.text()).then(res => this.setState({\n      apiResponse: res\n    }));\n  }\n\n  toggleListen() {\n    this.state.listening = !this.state.listening;\n    this.handleListen();\n  }\n\n  handleListen() {\n    if (this.state.listening) {\n      document.getElementById('microphone-btn').value = \"stop\";\n      recognition.start();\n    } else {\n      document.getElementById('microphone-btn').value = \"record\";\n      recognition.stop();\n    }\n\n    let finalTranscript = '';\n\n    recognition.onresult = event => {\n      let interimTranscript = '';\n\n      for (let i = event.resultIndex; i < event.results.length; i++) {\n        const transcript = event.results[i][0].transcript;\n        if (event.results[i].isFinal) finalTranscript += transcript + ' ';else interimTranscript += transcript;\n      }\n\n      if (interimTranscript.length <= 1) {\n        document.getElementById('interim').text = \"!\";\n      } else {\n        document.getElementById('interim').text = interimTranscript;\n      }\n\n      document.getElementById('final').text = finalTranscript;\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      id: \"microphone-btn\",\n      className: \"btn btn-primary btn-block btn-lg\",\n      onClick: this.toggleListen,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }\n    }, \"Record\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 125\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      id: \"recognize-btn\",\n      className: \"btn btn-primary btn-block btn-lg\",\n      onClick: this.callAPI,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }\n    }, \"Recognize\"), /*#__PURE__*/React.createElement(\"textarea\", {\n      id: \"interim\",\n      className: \"form-control\",\n      color: \"gray\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"textarea\", {\n      id: \"final\",\n      className: \"form-control\",\n      color: \"black\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default Speech;","map":{"version":3,"sources":["C:/Users/Sarita/react-firebase-authentication-starter-kit/src/components/Speech/index.js"],"names":["React","Component","SpeechRecognition","window","webkitSpeechRecognition","recognition","continous","interimResults","lang","Speech","constructor","state","listening","toggleListen","bind","handleListen","callAPI","fetch","document","getElementById","innerHTML","then","res","text","setState","apiResponse","value","start","stop","finalTranscript","onresult","event","interimTranscript","i","resultIndex","results","length","transcript","isFinal","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport './index.css';\r\nconst SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition\r\nconst recognition = new SpeechRecognition()\r\n\r\nrecognition.continous = true\r\nrecognition.interimResults = true\r\nrecognition.lang = 'en-US'\r\n\r\n\r\nclass Speech extends Component {\r\n\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      listening: false\r\n    }\r\n    this.toggleListen = this.toggleListen.bind(this)\r\n    this.handleListen = this.handleListen.bind(this)\r\n  }\r\n  \r\n  callAPI(){\r\n    fetch('http://localhost:9000/name?data=' + document.getElementById('final').innerHTML)\r\n    .then(res => res.text())\r\n    .then(res => this.setState({apiResponse : res}));\r\n  }\r\n\r\n  toggleListen() {\r\n    this.state.listening = !this.state.listening;\r\n     this.handleListen();\r\n  }\r\n  \r\n  handleListen(){ \r\n    if (this.state.listening) {\r\n      document.getElementById('microphone-btn').value = \"stop\";\r\n      recognition.start()\r\n    } else {\r\n      document.getElementById('microphone-btn').value = \"record\";\r\n      recognition.stop()      \r\n    }\r\n\r\n    let finalTranscript = ''\r\n    recognition.onresult = event => {\r\n      let interimTranscript = ''\r\n\r\n      for (let i = event.resultIndex; i < event.results.length; i++) {\r\n        const transcript = event.results[i][0].transcript;\r\n        if (event.results[i].isFinal) finalTranscript += transcript + ' ';\r\n        else interimTranscript += transcript;\r\n      }\r\n      if(interimTranscript.length<=1){\r\n        document.getElementById('interim').text = \"!\"  \r\n      }else{\r\n        document.getElementById('interim').text = interimTranscript\r\n      }\r\n      document.getElementById('final').text = finalTranscript\r\n\r\n\r\n\r\n  }\r\n}\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"wrap\">\r\n        <button id=\"microphone-btn\" className=\"btn btn-primary btn-block btn-lg\" onClick={this.toggleListen}>Record</button><br/>\r\n        <button id=\"recognize-btn\" className=\"btn btn-primary btn-block btn-lg\" onClick={this.callAPI}>Recognize</button>\r\n        <textarea id=\"interim\" className=\"form-control\" color='gray'/>\r\n        <textarea id=\"final\" className=\"form-control\" color='black'/>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Speech;"]},"metadata":{},"sourceType":"module"}